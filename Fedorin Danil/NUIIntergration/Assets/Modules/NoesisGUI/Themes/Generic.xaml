<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:SmartTwin.NoesisGUI.Controls"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions">

    <!-- #region Base Control Styles -->
    <Style x:Key="Style.Base">
        <Setter Property="Control.Foreground"
                Value="Black" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Stretch" />
        <!--<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>-->
    </Style>
    <Style TargetType="Control"
           BasedOn="{StaticResource Style.Base}" />
    <Style TargetType="ContentControl"
           BasedOn="{StaticResource Style.Base}" />
    <Style TargetType="HeaderedContentControl"
           BasedOn="{StaticResource Style.Base}" />
    <Style TargetType="ItemsControl"
           BasedOn="{StaticResource Style.Base}">
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource Style.Focus.Outer.Uniform}"/>-->
    </Style>
    <Style TargetType="HeaderedItemsControl"
           BasedOn="{StaticResource Style.Base}">
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
    </Style>
    <Style TargetType="UserControl"
           BasedOn="{StaticResource Style.Base}" />
    <Style TargetType="Page"
           BasedOn="{StaticResource Style.Base}" />
    <Style TargetType="Separator">
        <Setter Property="Background"
                Value="Black" />
    </Style>
    <!-- #endregion Base Control Styles -->

    <!-- #region Texts -->

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily"
                Value="Fonts/Montserrat/static/#Montserrat" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Foreground"
                Value="White" />
    </Style>

    <!-- #endregion -->

    <!-- #region Buttons -->
    <!-- ButtonBase -->
    <ControlTemplate x:Key="Template.ButtonBase"
                     TargetType="ButtonBase">
        <Grid x:Name="TemplateRoot">
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
            <ContentPresenter x:Name="PART_ContentPresenter"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="#28323A"
                        TargetName="Border" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Style.ButtonBase"
           TargetType="ButtonBase"
           BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="#353F48" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template"
                Value="{StaticResource Template.ButtonBase}" />
    </Style>

    <!-- Button -->
    <Style TargetType="Button"
           BasedOn="{StaticResource Style.ButtonBase}" />

    <!-- RepeatButton -->
    <Style TargetType="RepeatButton"
           BasedOn="{StaticResource Style.ButtonBase}" />

    <!-- IconButton -->

    <Style TargetType="{x:Type controls:IconButton}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Stretch"
                Value="Fill" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:IconButton}">
                    <Grid Background="{TemplateBinding Background}"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                        <Path Data="{TemplateBinding Data}"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="{TemplateBinding Stretch}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- #endregion -->

    <!-- #region ScrollViewer -->

    <!-- ScrollBar Thumb -->
    <Style x:Key="Style.Thumb.Default"
           TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Width"
                Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid Background="White" Width="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar PageButton -->
    <Style x:Key="Style.PageButton.Default"
           TargetType="RepeatButton"
           BasedOn="{StaticResource {x:Type RepeatButton}}">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Delay"
                Value="250" />
        <Setter Property="Interval"
                Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Template Horizontal -->
    <ControlTemplate x:Key="Template.ScrollBar.Horizontal" TargetType="ScrollBar">
        <Grid Background="#33FFFFFF">
            <Track x:Name="PART_Track" Orientation="Horizontal">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand"
                                  Style="{StaticResource Style.PageButton.Default}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb"
                           Style="{StaticResource Style.Thumb.Default}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="IncreaseButton"
                                  Command="ScrollBar.PageRightCommand"
                                  Style="{StaticResource Style.PageButton.Default}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- ScrollBar Template Vertical -->
    <ControlTemplate x:Key="Template.ScrollBar.Vertical" TargetType="ScrollBar">
        <Grid Background="#33FFFFFF">
            <Track x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageUpButton"
                                  Command="ScrollBar.PageUpCommand"
                                  Style="{StaticResource Style.PageButton.Default}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb"
                           Style="{StaticResource Style.Thumb.Default}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="IncreaseButton"
                                  Command="ScrollBar.PageDownCommand"
                                  Style="{StaticResource Style.PageButton.Default}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <!-- ScrollBar -->
    <Style x:Key="Style.ScrollBar.Default"
           TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="8" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{DynamicResource Template.ScrollBar.Vertical}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Height"
                        Value="8" />
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{DynamicResource Template.ScrollBar.Horizontal}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Background"
                Value="#353F48" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ScrollContentPresenter Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                Margin="{TemplateBinding Padding}" />

                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="0"
                                   Grid.Row="1"
                                   Orientation="Horizontal"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility }"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Minimum="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Style="{StaticResource Style.ScrollBar.Default}" />

                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Orientation="Vertical"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Minimum="0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Style="{StaticResource Style.ScrollBar.Default}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- #endregion -->

    <!-- #region ListBox-->
    <Style TargetType="ListBox"
           BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="#353F48" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="VirtualizingPanel.VirtualizationMode"
                Value="Standard" />
        <Setter Property="VirtualizingPanel.ScrollUnit"
                Value="Item" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}"
                                  Focusable="False">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBoxItem-->
    <Style TargetType="ListBoxItem"
           BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=HorizontalContentAlignment}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=VerticalContentAlignment}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- #endregion -->

    <!--#region TabControls-->
    <!-- TabControl -->
    <Style TargetType="TabControl"
           BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource Window.Default.BackgroundColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource Font.DisableColor}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel Panel.ZIndex="1"
                                  Background="Transparent"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border Grid.Row="1"
                                x:Name="SelectedContentBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabItem -->
    <Style TargetType="TabItem"
           BasedOn="{StaticResource {x:Type HeaderedContentControl}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="0,8" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Margin="16,0">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="0,0,0,2">
                            <ContentPresenter ContentSource="Header" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Panel.ZIndex"
                                    Value="1" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource Accent}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Panel.ZIndex"
                                    Value="2" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource Font.DefaultColor}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource Font.DefaultColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBox-->
    <!-- TextBox -->
    <Style x:Key="Style.TextBox.Placeholder"
           TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="{DynamicResource Font.DisableColor}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox"
           BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource TextBox.Default.BackgroundColor}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource TextBox.Default.BorderColor}" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBox.Default.ForegroundColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource TextBox.Default.CaretColor}" />
        <Setter Property="SelectionBrush"
                Value="{DynamicResource TextBox.Default.SelectionColor}" />
        <Setter Property="SelectionOpacity"
                Value="0.25" />
        <Setter Property="Padding"
                Value="6,7" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="AllowDrop"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" />
                        <Grid>
                            <Border x:Name="Placeholder"
                                    Padding="{TemplateBinding Padding}"
                                    Margin="2,0"
                                    Visibility="Collapsed">
                                <TextBlock Text="{Binding (noesis:Text.Placeholder), RelativeSource={RelativeSource TemplatedParent}}"
                                           Style="{DynamicResource Style.TextBox.Placeholder}" />
                            </Border>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          Padding="{TemplateBinding Padding}"
                                          Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text"
                                 Value="">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="Placeholder" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource Accent}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource Accent}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource TextBox.Default.DisabledColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="True">
                <Setter Property="Cursor"
                        Value="IBeam" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region CheckBox-->
    <!-- CheckBox -->
    <Geometry x:Key="Geometry.CheckBox.Check">M0,7.5L5.5,12.5 14,2.75 11.75,1 5.5,9 1.5,5.5z</Geometry>
    <Style TargetType="CheckBox"
           BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Background"
                Value="{DynamicResource Legacy.LowerLevel}" />
        <Setter Property="Foreground"
                Value="{DynamicResource Legacy.White}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="6,0,0,0" />
        <Setter Property="UseLayoutRounding"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          Tag="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Height="16"
                                Width="16"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <Path x:Name="Check"
                                      Data="{StaticResource Geometry.CheckBox.Check}"
                                      Width="14"
                                      Height="14"
                                      Fill="{TemplateBinding Foreground}">
                                </Path>
                                <Rectangle x:Name="CheckIndeterminate"
                                           Width="10"
                                           Height="10"
                                           Fill="{TemplateBinding Foreground}"
                                           Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource Legacy.Accent}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter Property="Visibility"
                                    Value="Hidden"
                                    TargetName="Check" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Check" />
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="CheckIndeterminate" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>